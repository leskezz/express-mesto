{"version":3,"sources":["images/Add-button__plus.svg","images/header__logo.svg","images/Edit-button__pen.svg","images/Delete-button.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/Api.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","logo","alt","CurrentUserContext","React","createContext","Card","currentUser","useContext","isLiked","card","likes","some","i","_id","link","name","onClick","onCardClick","owner","type","onCardDelete","deleteCardButton","onCardLike","length","Main","onEditAvatar","avatar","onEditProfile","editButtonImage","about","onAddPlace","addButtonImage","cards","map","key","Footer","api","baseUrl","headers","this","_baseUrl","_headers","url","method","body","fetch","then","res","ok","json","Promise","reject","Error","status","userUrl","_getResponseData","cardsUrl","newData","JSON","stringify","newCard","likesUrl","cardId","cardToDelete","avatarUrl","newAvatar","authorization","PopupWithForm","isOpen","noValidate","onSubmit","title","children","buttonName","onClose","closeButtonImage","ImagePopup","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","id","value","onChange","target","placeholder","minLength","maxLength","required","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","place","setPlace","setLink","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","all","getUserData","getInitialCards","values","userData","initialCards","catch","err","console","log","Provider","clickedCard","changeLikeCardStatus","newCards","c","deleteCard","filter","newUser","patchProfile","newProfile","patchAvatar","postNewCard","addedCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.147fd6bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Add-button__plus.b2fce4ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/header__logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/Edit-button__pen.6bfdb354.svg\";","module.exports = __webpack_public_path__ + \"static/media/Delete-button.d8078343.svg\";","import React from 'react';\n\nfunction Header (props) {\n    return (\n        <header className=\"header\">\n            <img src={props.logo} className=\"header__logo\" alt=\"Место\" />\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction Card (props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    function handleClick () {\n        props.onCardClick(props.card)\n    }\n\n    function handleLikeClick () {\n        props.onCardLike(props.card);\n    }\n\n    function handleDeleteClick () {\n        props.onCardDelete(props.card);\n    }\n\n    const isLiked = props.card.likes.some (i => i._id === currentUser._id);\n\n    return (\n        <li className=\"element\">\n            <img src={props.card.link} alt={props.card.name} className=\"element__image\" onClick={handleClick} />\n            {props.card.owner._id === currentUser._id && \n                <button type=\"button\" className=\"element__delete-button\" onClick={handleDeleteClick}>\n                <img src={props.deleteCardButton} className='element__delete-image' alt=\"Удалить\" />\n            </button> }\n            <div className=\"element__info\">\n                <h3 className=\"element__heading\">{props.card.name}</h3>\n                <div className=\"element__like-container\">\n                    <button type=\"button\" className={`element__like-button ${isLiked && 'element__like-button_active'}`} onClick={handleLikeClick}></button>\n                    <p className=\"element__like-count\">{props.card.likes.length}</p>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport editButtonImage from '../images/Edit-button__pen.svg';\nimport deleteCardButton from '../images/Delete-button.svg'\nimport Card from './Card.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction Main (props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <>\n            <main className=\"content\">\n\n                <section className=\"profile\">\n\n                    <div className=\"profile__avatar\">\n                        <button type=\"button\" className=\"profile__photo-edit\" onClick={props.onEditAvatar}>\n                            <img src={currentUser.avatar} className=\"profile__photo\" alt=\"Фото профиля\" />\n                        </button>\n                            <div className=\"profile__info\">\n                                <div className=\"profile__heading\">\n                                    <h1 className=\"profile__name\">{currentUser.name}</h1>\n                                    <button type=\"button\" className=\"profile__edit-button\" onClick={props.onEditProfile}>\n                                        <img src={editButtonImage} className=\"profile__edit-image\" alt=\"Правка\" />\n                                    </button>\n                                </div>\n                                <p className=\"profile__profession\">{currentUser.about}</p>\n                            </div>\n\n                    </div>\n                        <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}>\n                            <img src={props.addButtonImage} className=\"profile__add-image\" alt=\"Добавить\" />\n                        </button>\n\n                </ section>\n\n                <section className=\"elements\">\n\n                    <ul className=\"elements__grid\">\n\n                        {props.cards.length ?\n                        props.cards.map (card => (\n                            <Card key={card._id} card={card} deleteCardButton={deleteCardButton} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} />\n                        ))\n                        : \n                        <li className='element element_empty'>Здесь пока ничего нет</li>                    \n                        }\n\n                    </ul>\n\n                </section>\n\n            </main>\n\n        </>\n    )\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer () {\n\n    return (\n        <footer className=\"footer\">\n\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n\n        </footer>\n    )\n\n}\n\nexport default Footer;","class Api {\n    constructor ({baseUrl, headers}){\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    _getResponseData (url, {headers, method, body}) {\n        return fetch(url, {headers, method, body})\n                    .then((res) => {\n                        if (res.ok) {\n                            return res.json();\n                        }\n                        return Promise.reject(new Error(`Ошибка: ${res.status}`));\n                    })\n    }\n\n    getUserData (userUrl) {\n        return this._getResponseData(`${this._baseUrl}${userUrl}`, {\n            headers: this._headers\n        })\n    }       \n    \n\n    getInitialCards (cardsUrl) {\n        return this._getResponseData(`${this._baseUrl}${cardsUrl}`, {\n            headers: this._headers\n        })\n    }\n\n    patchProfile (userUrl, newData) {\n        return this._getResponseData(`${this._baseUrl}${userUrl}`, {\n            method: 'PATCH',\n            headers: this._headers, \n            body: JSON.stringify({\n                name: newData.name,\n                about: newData.about\n            })\n        })\n\n    }\n\n    postNewCard (cardsUrl, newCard) {\n        return this._getResponseData(`${this._baseUrl}${cardsUrl}`, {\n            method: 'POST',\n            headers: this._headers, \n            body: JSON.stringify({\n                name: newCard.name,\n                link: newCard.link\n            })\n        })\n\n    }\n\n    changeLikeCardStatus(likesUrl, cardId, isLiked) {\n        if (!isLiked) {\n            return this._getResponseData(`${this._baseUrl}${likesUrl}/${cardId}`, {\n                method: 'PUT',\n                headers: this._headers \n            })\n        } else {\n            return this._getResponseData(`${this._baseUrl}${likesUrl}/${cardId}`, {\n                method: 'DELETE',\n                headers: this._headers \n            })\n        }\n    }\n\n    deleteCard (cardsUrl, cardToDelete) {\n        return this._getResponseData(`${this._baseUrl}${cardsUrl}/${cardToDelete._id}`, {\n            method: 'DELETE',\n            headers: this._headers \n        })\n    }\n\n    patchAvatar(avatarUrl, newAvatar){\n        return this._getResponseData(`${this._baseUrl}${avatarUrl}`, {\n            method: 'PATCH',\n            headers: this._headers, \n            body: JSON.stringify({\n                avatar: newAvatar.avatar\n            })\n        })\n    }\n\n}\n\nconst api = new Api ({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n    headers: {\n        authorization: 'b9ca3f7b-fe22-468a-8861-4b4eef5a6009',\n        'Content-Type': 'application/json'\n    },\n})\n\nexport default api;\n","import React from 'react';\n\nfunction PopupWithForm (props) {\n\n    return (\n\n        <section className={`popup popup_btn_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n\n            <form name ={props.name} className=\"popup__form\" noValidate onSubmit={props.onSubmit}>\n\n                <h3 className=\"popup__heading\">{props.title}</h3>\n                    \n                {props.children}\n\n                <button type=\"submit\" className=\"popup__save-button\">{props.buttonName}</button>\n                    \n                <button type=\"button\" className=\"popup__close-button\" onClick={props.onClose}>\n                    <img src={props.closeButtonImage} className=\"popup__close-image\" alt=\"Закрыть\" />\n                </button>\n\n            </form>\n\n        </section>\n    )\n\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction ImagePopup (props) {\n    return (\n        <section className={`popup popup_btn_card-image ${props.card.link ? 'popup_opened' : ''}`}>\n            <div className='card-full-size'>\n                <img className='card-full-size__image' src={props.card.link} alt={props.card.name} />\n                <h3 className='card-full-size__heading'>{props.card.name}</h3>\n                <button type=\"button\" className=\"popup__close-button\" onClick={props.onClose}>\n                    <img src={props.closeButtonImage} className=\"popup__close-image\" alt=\"Закрыть\" />\n                </button>\n            </div>\n        </section>\n    )\n}\n\nexport default ImagePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handleChangeDescription(e) {\n        setDescription(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        props.onUpdateUser({\n            name,\n            about: description\n        });\n    }\n\n    return (\n        <PopupWithForm name='edit-profile' title='Редактировать профиль' buttonName='Сохранить' closeButtonImage={props.closeButtonImage} isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n            <fieldset className=\"popup__inputs-container\">\n                <label className =\"popup__input-container\">\n                    <input id=\"input__name\" type=\"text\" value={name || ''} onChange={handleChangeName} className=\"popup__item popup__item_el_name\" placeholder=\"Ваше имя\" name=\"name\" minLength=\"2\" maxLength=\"40\" required />\n                    <span id=\"input__name-error\" className=\"popup__input-error\"></span>\n                </label>\n                <label className =\"popup__input-container\">\n                    <input id=\"input__profession\" type=\"text\" value={description || ''} onChange={handleChangeDescription} className=\"popup__item popup__item_el_profession\" placeholder=\"Ваш род занятий\" name=\"about\" minLength=\"2\" maxLength=\"200\" required />\n                    <span id=\"input__profession-error\" className=\"popup__input-error\"></span>\n                </label>\n            </fieldset>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nfunction EditAvatarPopup(props) {\n\n    const avatarRef = React.useRef({});\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n            avatar: avatarRef.current.value\n        });\n    }\n\n    return (\n        <PopupWithForm name='edit-avatar' title='Обновить аватар' buttonName='Сохранить' closeButtonImage={props.closeButtonImage} isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n            <fieldset className=\"popup__inputs-container\">\n                <label className =\"popup__input-container\">\n                    <input ref={avatarRef} id=\"input__link\" type=\"url\" className=\"popup__item popup__item_el_link\" placeholder=\"Ссылка на картинку\" name=\"avatar\" required />\n                    <span id=\"input__link-error\" className=\"popup__input-error\"></span>\n                </label>\n            </fieldset>\n        </PopupWithForm>\n    )\n\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nfunction AddPlacePopup(props) {\n\n    const [place, setPlace] = React.useState('');\n    const [link, setLink] = React.useState('');\n\n    function handleChangePlace(e) {\n        setPlace(e.target.value);\n    }\n\n    function handleChangeLink(e) {\n        setLink(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onAddPlace({\n            name: place,\n            link\n        });\n    }\n\n    return (\n        <PopupWithForm name='add-element' title='Новое место' buttonName='Создать' closeButtonImage={props.closeButtonImage} isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\n            <fieldset className=\"popup__inputs-container\">\n                <label className =\"popup__input-container\">\n                    <input id=\"input__place\" type=\"text\" value={place || ''} onChange={handleChangePlace} className=\"popup__item popup__item_el_place\" placeholder=\"Название\" name=\"name\" minLength=\"1\" maxLength=\"30\" required />\n                    <span id=\"input__place-error\" className=\"popup__input-error\"></span>\n                </label>\n                <label className =\"popup__input-container\">\n                    <input id=\"input__link\" type=\"url\" value={link || ''} onChange={handleChangeLink} className=\"popup__item popup__item_el_link\" placeholder=\"Ссылка на картинку\" name=\"link\" required />\n                    <span id=\"input__link-error\" className=\"popup__input-error\"></span>\n                </label>\n            </fieldset>\n        </PopupWithForm>\n    )\n\n}\n\nexport default AddPlacePopup;","import React from 'react';\nimport logo from '../images/header__logo.svg';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport api from '../utils/Api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\nimport addButtonImage from '../images/Add-button__plus.svg';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\n\n\nfunction App() {\n\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({});\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect (() => {\n        Promise.all([\n            api.getUserData('/users/me'),\n            api.getInitialCards('/cards')\n        ])\n        .then ((values) => {\n            const [userData, initialCards] = values;\n            setCards(initialCards);\n            setCurrentUser(userData);\n        })\n        .catch(err => console.log(err));\n    }, []\n    );\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick () {\n        setAddPlacePopupOpen(true);\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopupOpen(false);\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setSelectedCard({});\n    }\n\n    function handleCardClick(clickedCard) {\n        setSelectedCard(clickedCard);\n    }\n\n    function handleUpdateUser(newUser){\n        api.patchProfile('/users/me', newUser)\n        .then(newProfile => {\n            setCurrentUser(newProfile);\n            closeAllPopups();\n        })\n        .catch(err => console.log(err));\n    }\n\n    function handleUpdateAvatar(newAvatar) {\n        api.patchAvatar('/users/me/avatar', newAvatar)\n        .then(newProfile => {\n            setCurrentUser(newProfile);\n            closeAllPopups();\n        })\n        .catch(err => console.log(err));\n    }\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some (i => i._id === currentUser._id);\n\n        api.changeLikeCardStatus('/cards/likes', card._id, isLiked)\n        .then((newCard) => {\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n            setCards(newCards);\n        })\n        .catch(err => console.log(err));\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard('/cards', card)\n        .then(() => {\n            const newCards = cards.filter(c => c._id !== card._id);\n            setCards(newCards);\n        })\n        .catch(err => console.log(err));\n    }\n\n    function handleAddPlaceSubmit(newCard) {\n        api.postNewCard('/cards', newCard)\n        .then((addedCard) => {\n            setCards([addedCard, ...cards]);\n            closeAllPopups();\n        })\n        .catch(err => console.log(err));\n    }\n\n    return (\n    <div className=\"page\">\n        <CurrentUserContext.Provider value={currentUser}>\n            <Header logo={logo} />\n            <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} addButtonImage={addButtonImage} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} />\n            <Footer />\n\n            <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} closeButtonImage={addButtonImage} onUpdateUser={handleUpdateUser}/>\n            <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} closeButtonImage={addButtonImage} onUpdateAvatar={handleUpdateAvatar} />\n            <AddPlacePopup closeButtonImage={addButtonImage} isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n            <PopupWithForm name='delete-element' title='Вы уверены?' buttonName='Да' closeButtonImage={addButtonImage} onClose={closeAllPopups} />\n            <ImagePopup closeButtonImage={addButtonImage} onClose={closeAllPopups} card={selectedCard} />\n        </CurrentUserContext.Provider>\n    </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}